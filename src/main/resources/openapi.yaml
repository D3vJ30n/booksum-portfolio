openapi: 3.0.0
info:
  title: Booksum API
  description: AI 기반 도서 커머스 플랫폼 API 문서
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /api/users/signup:
    post:
      summary: 회원가입
      description: 사용자 계정을 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        "201":
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    example: 1
                  email:
                    type: string
                    example: user@example.com
        "400":
          description: 입력값 오류

  /api/users/login:
    post:
      summary: 로그인
      description: 사용자 로그인 및 JWT 토큰 발급
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: "jwt-token"
        "401":
          description: 인증 실패

  /api/users/me:
    get:
      summary: 회원 정보 조회
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 회원 정보 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    example: 1
                  email:
                    type: string
                    example: user@example.com

  /api/products/search:
    get:
      summary: 상품 검색
      description: 키워드를 기준으로 도서를 검색합니다.
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          example: "AI 도서"
      responses:
        "200":
          description: 검색 결과 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: "AI 개론"
                    author:
                      type: string
                      example: "홍길동"
                    price:
                      type: integer
                      example: 15000
        "400":
          description: 잘못된 요청

  /api/cart/add:
    post:
      summary: 장바구니 추가
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartAddRequest"
      responses:
        "201":
          description: 장바구니 추가 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "장바구니에 상품이 추가되었습니다"
                  data:
                    type: object
                    properties:
                      cartId:
                        type: integer
                        example: 1
                      quantity:
                        type: integer
                        example: 1
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "상품 ID가 유효하지 않습니다"
        "401":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "인증이 필요합니다"

  /api/cart:
    get:
      summary: 장바구니 조회
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 장바구니 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    cartItemId:
                      type: integer
                      example: 1
                    product:
                      type: object
                      properties:
                        productId:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: "AI 개론"
                    quantity:
                      type: integer
                      example: 2

  /api/orders:
    post:
      summary: 주문 생성
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cartItemIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        "201":
          description: 주문 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    example: 10
                  totalPrice:
                    type: integer
                    example: 45000

  /api/ai/summary:
    post:
      summary: AI 요약 기능
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: "요약할 내용"
      responses:
        "200":
          description: AI 요약 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: string
                    example: "요약된 내용"

  /api/ai/recommend:
    get:
      summary: AI 추천 도서 목록 조회
      security:
        - bearerAuth: []
      responses:
        "200":
          description: AI 추천 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                      example: 2
                    title:
                      type: string
                      example: "추천 도서"

  /api/products/like:
    post:
      summary: 좋아요 추가
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                  example: 1
      responses:
        "200":
          description: 좋아요 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Liked"

  /api/bestsellers:
    get:
      summary: 베스트셀러 조회
      responses:
        "200":
          description: 베스트셀러 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                      example: 3
                    title:
                      type: string
                      example: "베스트셀러 도서"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    CartAddRequest:
      type: object
      properties:
        productId:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 1
      required:
        - productId
        - quantity
